// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Question {
    id          Int        @id @default(autoincrement())
    title       String
    category    Category[]
    difficulty  Difficulty
    description String
    example     String
    constraint  String
    popularity  Int        @default(0)
    solutions   Solution[]
}

model Solution {
    id          String   @id @default(uuid())
    question    Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
    questionId  Int
    title       String
    description String
    code        String
    language    String
}

enum Difficulty {
    Easy
    Medium
    Hard
}

enum Category {
    Strings
    DataStructures
    Algorithms
    BitManipulation
    Databases
    Arrays
    Brainteaser
    Recursion
}

model NewQuestion {
    id           Int                   @id @default(autoincrement())
    title        String
    category     Category[]
    difficulty   Difficulty
    description  String
    example      String[]
    constraint   String[]
    popularity   Int                   @default(0)
    initialCodes QuestionInitialCode[]
    runnerCodes  QuestionRunnerCode[]
    testCases    QuestionTestCase[]
}

model QuestionInitialCode {
    language   String
    code       String
    Question   NewQuestion @relation(fields: [questionId], references: [id])
    questionId Int

    @@unique([language, questionId])
}

model QuestionRunnerCode {
    language   String
    code       String
    Question   NewQuestion @relation(fields: [questionId], references: [id])
    questionId Int

    @@unique([language, questionId])
}

model QuestionTestCase {
    testCaseNumber Int
    input          String
    expectedOutput String[]
    Question       NewQuestion @relation(fields: [questionId], references: [id])
    questionId     Int

    @@unique([testCaseNumber, questionId])
}
