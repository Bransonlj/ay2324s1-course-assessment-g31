version: "3"
services:
  socket:
    container_name: socket-service
    build:
      context: ./backend/socket-service
      dockerfile: Dockerfile.prod
    ports:
      - "5006:5000"
    env_file:
      - ./backend/socket-service/.env
    networks:
      - socket_service_network
      - api_network

  matching:
    container_name: matching-service
    build:
      context: ./backend/matching-service
      dockerfile: Dockerfile.prod
    ports:
      - "5002:5000"
    env_file:
      - ./backend/matching-service/.env
    links:
      - postgres_matching_service
    networks:
      - matching_service_network
      - api_network

  postgres_matching_service:
    image: postgres:latest
    container_name: postgres-matching-service
    volumes:
      - progresDB:/data/postgres/matching-service
    env_file:
      - ./backend/matching-service/.env
    networks:
      - matching_service_network

  user:
    container_name: user-service
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    env_file:
      - ./backend/user-service/.env
    links:
      - postgres_user_service
    networks:
      - user_service_network
      - api_network

  postgres_user_service:
    image: postgres:latest
    container_name: postgres-user-service
    volumes:
      - progresDB:/data/postgres/user-service
    env_file:
      - ./backend/user-service/.env
    networks:
      - user_service_network

  question:
    container_name: question-service
    build:
      context: ./backend/question-service
      dockerfile: Dockerfile.dev
    ports:
      - "5003:5000"
    env_file:
      - ./backend/question-service/.env
    links:
      - postgres_question_service
    networks:
      - question_service_network
      - api_network

  postgres_question_service:
    image: postgres:latest
    container_name: postgres-question-service
    volumes:
      - progresDB:/data/postgres/question-service
    env_file:
      - ./backend/question-service/.env
    networks:
      - question_service_network

  history:
    container_name: history-service
    build:
      context: ./backend/history-service
      dockerfile: Dockerfile.dev
    ports:
      - "5007:5000"
    env_file:
      - ./backend/history-service/.env
    links:
      - postgres_history_service
    networks:
      - history_service_network
      - api_network

  postgres_history_service:
    image: postgres:latest
    container_name: postgres-history-service
    volumes:
      - progresDB:/data/postgres/history-service
    env_file:
      - ./backend/history-service/.env
    networks:
      - history_service_network

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    networks:
      - user_service_network

volumes:
  progresDB:
  frontend:

networks:
  api_network:
    driver: bridge
  socket_service_network:
    driver: bridge
  matching_service_network:
    driver: bridge
  user_service_network:
    driver: bridge
  question_service_network:
    driver: bridge
  history_service_network:
    driver: bridge
